name: Pages Deployment
on:
  schedule:
    - cron: '20 3 * * *'
  push:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'true'
      - name: Setup golang
        uses: actions/setup-go@v4
        with:
          go-version: '1.20.8'
          cache-dependency-path: openring/go.sum
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Setup Clojure
        run: curl https://download.clojure.org/install/linux-install-1.11.1.1347.sh -o install-clj.sh && chmod +x install-clj.sh && sudo ./install-clj.sh
      - name: Cache clojure deps
        uses: actions/cache@v3
        with:
          path: |
            ~/.m2/repository
            ~/.gitlibs
            ~/.deps.clj
          key: cljdeps-${{ hashFiles('deps.edn') }}
          restore-keys: cljdeps-
      - name: Check Spotify access token validity
        id: spotify-check
        run: |
          curl -H 'Authorization: Bearer ${{ secrets.SPOTIFY_ACCESS_TOKEN }}' https://api.spotify.com/v1/me/top/artists?limit=1
        continue-on-error: true
      - name: Refresh spotify tokens
        if: ${{ failure() && steps.spotify-check.conclusion == 'failure' }}
        run: |
          clojure -X:refresh-spotify-github-secrets :github-token '"${{ secrets.BLOG_SECRET_TOKEN }}"' \
            :repo '"${{ github.repository }}"' :refresh-token '"${{ secrets.SPOTIFY_REFRESH_TOKEN }}"' \
            :client-id '"${{ secrets.SPOTIFY_CLIENT_ID }}"' :client-secret '"${{ secrets.SPOTIFY_CLIENT_SECRET }}"' \
            :refresh-secret '"SPOTIFY_REFRESH_TOKEN"' :access-secret '"SPOTIFY_ACCESS_TOKEN"'
      - name: Generate webring
        run: clojure -X:openring
        working-directory: ${{ github.workspace }}
      - name: Build blog
        run: clojure -M:build
        working-directory: ${{ github.workspace }}
        env:
          UPDATE_NOW_PAGE: "1"
          SPOTIFY_ACCESS_TOKEN: ${{ secrets.SPOTIFY_ACCESS_TOKEN }}
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
